name: Vue.js CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: ${{ secrets.DOCKER_IMAGE }}
  CONTAINER_NAME: vue-cicd-demo

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint
        env:
          CI: true

      - name: Run unit tests
        run: npm run test:unit
        env:
          CI: true

      - name: Build project
        run: npm run build

  docker-build-push:
    needs: lint-test-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/vuejs-app:${{ github.run_number }}
            ${{ secrets.DOCKER_USERNAME }}/vuejs-app:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/vuejs-app:latest
          cache-to: type=inline

  deploy:
    needs: docker-build-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker stop vue-cicd-demo || true
            docker rm vue-cicd-demo || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/vuejs-app:${{ github.run_number }}
            docker run -d -p 90:80 --name vue-cicd-demo ${{ secrets.DOCKER_USERNAME }}/vuejs-app:${{ github.run_number }}
          EOF
